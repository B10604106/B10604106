data()
data()
source('~/.active-rstudio-document', echo=TRUE)
data(AirPassengers)
library(AirPassengers)
data.set::(AirPassengers)
data.set(AirPassengers)
AirPassengers %>%
library(AirPassengers)
AirPassengers
ggplot(data = AirPassengers, aes( x = month, y = passengers)) +
geom_point
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages()
install.packages(dplyr)
install.packages("dplyr")
ggplot(data = AirPassengers_1949, aes( x = month, y = passengers)) +
geom_point()
install.packages("ggplot2")
library(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
AirPassengers_1949 <- AirPassengers %>%
filter( year == 1949 )
source('~/.active-rstudio-document', echo=TRUE)
AirPassengers
str(AirPassengers)
AirPassengers$1949
AirPassengers$[1949]
AirPassengers[1949]
AirPassengers[1]
str(iris)
str(BJsales)
str(Orange)
str(trees)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(datasets)
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = trees, aes( x = Girth, y = Height)) +
geom_point()
str(rock)
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = rock, aes( x = area, y = shape, size = peri)) +
geom_point()
, size
str(volcano )
str(rivers)
str(islands)
str(CO2)
str(InsectSprays)
ggplot(data = InsectSprays, aes( x = num, y = Factor), color = Factor) +
geom_point()
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = InsectSprays, aes( x = num, y = Factor), color = Factor) +
geom_point()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = InsectSprays, aes( x = count, y = Factor)) +
geom_point()
ggplot(data = InsectSprays, aes( x = count, y = spray)) +
geom_point()
ggplot(data = InsectSprays, aes( x = count, y = spray)) +
geom_histogram()
ggplot(data = InsectSprays, aes( x = count)) +
geom_histogram()
ggplot(data = InsectSprays, aes( x = count)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = InsectSprays, aes( x = spray)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = InsectSprays, aes( x = count)) +
geom_bar(fill = "lightblue", colour = "black")
str(Titanic)
str(ToothGrowth)
ggplot(data = ToothGrowth, aes( x = len, y = supp, color = dose)) +
geom_point()
str(trees)
# "此圖為樹木的周長和高度作圖"
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = trees, aes( x = Girth, y = Height)) +
geom_point()
# "由圖可看出樹木的周長大多為10~14之間，而其高度大多在7以上"
dplyr(ToothGrowth)
str(ToothGrowth)
data()
str(eurodist)
str(WorldPhones)
str(Titanic)
str(ToothGrowth)
ect of Vitamin C on Tooth Growth in Guinea Pigs
##levels分兩種一種是"OJ"，一種是"VC"
##顏色表示劑量
str(rock)
str(InsectSprays)
str(ldeaths (UKLungDeaths) )
str(WWWusage)
str(ChickWeight )
str(Loblolly)
str(USArrests)
install.packages(ggthemes)
install.packages(ggthemes)
install.packages("ggthemes")
install.packages("mice")
install.packages("randomForest")
full($Name)
full$Name
fl
full
train <- read.csv('../week3/all/train.csv', stringsAsFactors = F)
test  <- read.csv('../week3/all/test.csv', stringsAsFactors = F)
full  <- bind_rows(train, test) # bind training & test data
?bind_rows
n <- 'Braund, Mr. Owen Harris'
gsub('(.*, )|(\\..*)', '', n)
gsub('(\\..*)', '', n)
gsub('(.*, )', '', n)
gsub('(.*, )|(\\..*)', '', n)
n <- 'Braund, Mr. Owen Harris'
gsub('|(\\..*)', '', n)
gsub('(.*, )|', '', n)
n <- 'Braund, Mr. Owen Harris'
gsub('(.*, )|(\\..*)', 'a', n)
gsub('(.*, )|', 'a', n)
n <- 'Braund, Mr. Owen Harris'
gsub('|(\\..*)', 'a', n)
?paste
?cat
?fill
>ggplot
?ggplot
?ggplot
?apply
?ggplot2
??ggplot2
# This variable appears to have a lot of missing values
full$Cabin[1:28]
?sapply
?mice
?facet
head(data)
setwd("~/GitHub/B10604106/week3")
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(xml2)
library(tmcn)
library(rvest)
library(xml2)
library(tmcn)
library(rvest)
from <- 6697 # 2018-06-01
to <- 6756 # 2018-06-30
prefix = "https://www.ptt.cc/bbs/Stock/index"
data <- list()
for( id in c(from:to) )
{
url <- paste0( prefix, as.character(id), ".html" )
html <- htmlParse( GET(url) )
url.list <- xpathSApply( html, "//div[@class='title']/a[@href]", xmlAttrs )
data <- rbind( data, as.matrix(paste('https://www.ptt.cc', url.list, sep='')) )
}
data <- unlist(data)
head(data)
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url))
doc <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
time <- xpathSApply( html, "//*[@id='main-content']/div[4]/span[2]", xmlValue )
temp <- gsub(" "," 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
#date <- paste(part[[1]][2], part[[1]][3], part[[1]][5], sep="-")
#date <- paste(part[[1]][2], part[[1]][5], sep="_")
#date <- paste(part[[1]][1], part[[1]][2], sep="_")
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
#print(hour)
name <- paste0('./DATA/', hour, ".txt")
write(doc, name, append = TRUE)
}
sapply(data, getdoc)
library(bitops)
library(httr)
library(RCurl)
library(XML)
library(tm)
library(NLP)
library(tmcn)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(xml2)
library(tmcn)
library(rvest)
library(xml2)
library(tmcn)
library(rvest)
from <- 4469 # 2018-06-01
to <- 4472 # 2018-06-30
prefix = "https://www.ptt.cc/bbs/Stock/index"
data <- list()
for( id in c(from:to) )
{
url <- paste0( prefix, as.character(id), ".html" )
html <- htmlParse( GET(url) )
url.list <- xpathSApply( html, "//div[@class='title']/a[@href]", xmlAttrs )
data <- rbind( data, as.matrix(paste('https://www.ptt.cc', url.list, sep='')) )
}
data <- unlist(data)
head(data)
library(dplyr)
getdoc <- function(url)
{
html <- htmlParse( getURL(url))
doc <- xpathSApply( html, "//div[@id='main-content']", xmlValue )
time <- xpathSApply( html, "//*[@id='main-content']/div[4]/span[2]", xmlValue )
temp <- gsub(" "," 0", unlist(time) )
part <- strsplit( temp, split=" ", fixed=T )
#date <- paste(part[[1]][2], part[[1]][3], part[[1]][5], sep="-")
#date <- paste(part[[1]][2], part[[1]][5], sep="_")
#date <- paste(part[[1]][1], part[[1]][2], sep="_")
timestamp <- part[[1]][4]
timestamp <- strsplit( timestamp, split=":", fixed=T )
hour <- timestamp[[1]][1]
#print(hour)
name <- paste0('./DATA/', hour, ".txt")
write(doc, name, append = TRUE)
}
sapply(data, getdoc)

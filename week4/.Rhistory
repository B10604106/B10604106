data()
data()
source('~/.active-rstudio-document', echo=TRUE)
data(AirPassengers)
library(AirPassengers)
data.set::(AirPassengers)
data.set(AirPassengers)
AirPassengers %>%
library(AirPassengers)
AirPassengers
ggplot(data = AirPassengers, aes( x = month, y = passengers)) +
geom_point
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages()
install.packages(dplyr)
install.packages("dplyr")
ggplot(data = AirPassengers_1949, aes( x = month, y = passengers)) +
geom_point()
install.packages("ggplot2")
library(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
AirPassengers_1949 <- AirPassengers %>%
filter( year == 1949 )
source('~/.active-rstudio-document', echo=TRUE)
AirPassengers
str(AirPassengers)
AirPassengers$1949
AirPassengers$[1949]
AirPassengers[1949]
AirPassengers[1]
str(iris)
str(BJsales)
str(Orange)
str(trees)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(datasets)
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = trees, aes( x = Girth, y = Height)) +
geom_point()
str(rock)
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = rock, aes( x = area, y = shape, size = peri)) +
geom_point()
, size
str(volcano )
str(rivers)
str(islands)
str(CO2)
str(InsectSprays)
ggplot(data = InsectSprays, aes( x = num, y = Factor), color = Factor) +
geom_point()
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = InsectSprays, aes( x = num, y = Factor), color = Factor) +
geom_point()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = InsectSprays, aes( x = count, y = Factor)) +
geom_point()
ggplot(data = InsectSprays, aes( x = count, y = spray)) +
geom_point()
ggplot(data = InsectSprays, aes( x = count, y = spray)) +
geom_histogram()
ggplot(data = InsectSprays, aes( x = count)) +
geom_histogram()
ggplot(data = InsectSprays, aes( x = count)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = InsectSprays, aes( x = spray)) +
geom_bar(fill = "lightblue", colour = "black")
ggplot(data = InsectSprays, aes( x = count)) +
geom_bar(fill = "lightblue", colour = "black")
str(Titanic)
str(ToothGrowth)
ggplot(data = ToothGrowth, aes( x = len, y = supp, color = dose)) +
geom_point()
str(trees)
# "此圖為樹木的周長和高度作圖"
library(datasets)
library(dplyr)
library(ggplot2)
ggplot(data = trees, aes( x = Girth, y = Height)) +
geom_point()
# "由圖可看出樹木的周長大多為10~14之間，而其高度大多在7以上"
dplyr(ToothGrowth)
str(ToothGrowth)
data()
str(eurodist)
str(WorldPhones)
str(Titanic)
str(ToothGrowth)
ect of Vitamin C on Tooth Growth in Guinea Pigs
##levels分兩種一種是"OJ"，一種是"VC"
##顏色表示劑量
str(rock)
str(InsectSprays)
str(ldeaths (UKLungDeaths) )
str(WWWusage)
str(ChickWeight )
str(Loblolly)
str(USArrests)
install.packages(ggthemes)
install.packages(ggthemes)
install.packages("ggthemes")
install.packages("mice")
install.packages("randomForest")
full($Name)
full$Name
fl
full
train <- read.csv('../week3/all/train.csv', stringsAsFactors = F)
test  <- read.csv('../week3/all/test.csv', stringsAsFactors = F)
full  <- bind_rows(train, test) # bind training & test data
?bind_rows
n <- 'Braund, Mr. Owen Harris'
gsub('(.*, )|(\\..*)', '', n)
gsub('(\\..*)', '', n)
gsub('(.*, )', '', n)
gsub('(.*, )|(\\..*)', '', n)
n <- 'Braund, Mr. Owen Harris'
gsub('|(\\..*)', '', n)
gsub('(.*, )|', '', n)
n <- 'Braund, Mr. Owen Harris'
gsub('(.*, )|(\\..*)', 'a', n)
gsub('(.*, )|', 'a', n)
n <- 'Braund, Mr. Owen Harris'
gsub('|(\\..*)', 'a', n)
?paste
?cat
?fill
>ggplot
?ggplot
?ggplot
?apply
?ggplot2
??ggplot2
# This variable appears to have a lot of missing values
full$Cabin[1:28]
?sapply
?mice
?facet
setwd("~/GitHub/B10604106/week4")
library(readr)
test <- read_csv("all/test.csv")
View(test)
library(readr)
train <- read_csv("all/train.csv")
View(train)
library(readr)
gender_submission <- read_csv("all/gender_submission.csv")
View(gender_submission)
library(ggplot2)
ggplot(data = full2, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Mathematical Score Box')
library(dplyr)
gender  <- read.csv('../week4/all/gender_submission.csv', stringsAsFactors = F)
test  <- read.csv('../week4/all/test.csv', stringsAsFactors = F)
train <- read.csv('../week4/all/train.csv', stringsAsFactors = F)
first <- merge(test, gender, by = "PassengerId")
full2 <- bind_rows(train, first)
full2$Survived <- as.factor(full2$Survived)
library(ggplot2)
ggplot(data = full2, aes(x = Survived, y = Fare)) +
geom_boxplot() + coord_flip() +
labs( y = 'Fare', x = 'Survived',
title = 'Mathematical Score Box')
full3<-na.omit(full2)
#以下函式計算95%信賴區間
with(full3,
tapply(Fare, Survived,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(Fare ~ Survived, data = full3)
t.test(Fare ~ Survived, data = full3, var.equal = TRUE)
library(Hmisc)
full3$Embarked <- as.factor(full3$Embarked)
#先把父母教育欄位內各個水準順序定下來(order of factors)
full3$Embarked <- factor(full3$Embarked,
levels = c('C',
'Q',
'S'
))
#看不同父母教育程度下的數學分數平均數
tapply(full3$Fare, full3$Embarked, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
anova(m1 <- lm(Fare ~ Embarked, data = full3))
ggplot(data = full3,
aes(group = Embarked,
y = Fare, x = Embarked)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Age),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '年齡', y = '票價')
full3<-na.omit(full2)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3<-na.omit(full2)
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3<-na.omit(full2)
full3$Embarked <- gsub('\\s+', '', full3$Embarked)
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3<-na.omit(full2)
Embarked <- gsub('\\s+', '', full3$Embarked)
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
anova(m1 <- lm(Fare ~ Embarked, data = full3))
ggplot(data = full3,
aes(group = Embarked,
y = Fare, x = Embarked)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Age),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '年齡', y = '票價')
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full2,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full2,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full1,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full2,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = full2,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3$Embarked[full3$Embarked=='C'] <- NA
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3$Embarked[full3$Embarked=='C'] <- ' '
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
full3$Embarked[full3$Embarked=='C'] <- ' '
ggplot(data = full3,
aes(x = Embarked, y = Fare)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(full3$Fare) ,
linetype = 'dotted') +
labs(x = '登陸地點', y = '票價平均') +
coord_flip()
anova(m1 <- lm(Fare ~ Embarked, data = full3))
ggplot(data = full3,
aes(group = Embarked,
y = Fare, x = Embarked)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = Embarked,
y = Fare, x = Age),
method = 'lm', se = F) +
facet_grid( . ~  Embarked) +
labs(x = '年齡', y = '票價')
